<?php

declare(strict_types=1);

namespace App\Application\{{modelName}}\Update{{modelName}};

use App\Domain\{{modelName}}\{{modelName}};
use App\Domain\{{modelName}}\{{modelName}}Repository;
use Rosamarsky\CommandBus\Command;
use Rosamarsky\CommandBus\Handler;

/**
 * Class Update{{modelName}}Handler
 * @package App\Application\{{modelName}}\Update{{modelName}}
 */
class Update{{modelName}}Handler implements Handler
{
    /**
     * @var {{modelName}}Repository
     */
    private {{modelName}}Repository ${{modelNameSingularLowerCase}}Repository;

    /**
     * Update{{modelName}}Handler constructor.
     * @param {{modelName}}Repository ${{modelNameSingularLowerCase}}Repository
     */
    public function __construct(
        {{modelName}}Repository ${{modelNameSingularLowerCase}}Repository
    ) {
        $this->{{modelNameSingularLowerCase}}Repository = ${{modelNameSingularLowerCase}}Repository;
    }

    /**
     * @param Command|Update{{modelName}} $command
     * @return {{modelName}}
     */
    public function handle(Command $command)
    {
        ${{modelNameSingularLowerCase}} = $command->{{modelNameSingularLowerCase}}();

        $this->{{modelNameSingularLowerCase}}Repository->store(${{modelNameSingularLowerCase}});

        return ${{modelNameSingularLowerCase}};
    }
}
